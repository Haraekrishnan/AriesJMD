
{
  "rules": {
    // By default, deny all reads and writes.
    ".read": false,
    ".write": false,

    // Allow any authenticated user to read the top-level nodes they need
    // for the app to function correctly (e.g., loading user data, roles, tasks).
    "users": { ".read": "auth != null" },
    "roles": { ".read": "auth != null" },
    "projects": { ".read": "auth != null" },
    "branding": { ".read": "auth != null" },
    "tasks": { ".read": "auth != null" },
    "activityLogs": { ".read": "auth != null" },
    "plannerEvents": { ".read": "auth != null" },
    "dailyPlannerComments": { ".read": "auth != null" },
    "achievements": { ".read": "auth != null" },
    "vehicles": { ".read": "auth != null" },
    "drivers": { ".read": "auth != null" },
    "incidentReports": { ".read": "auth != null" },
    "manpowerLogs": { ".read": "auth != null" },
    "manpowerProfiles": { ".read": "auth != null" },
    "internalRequests": { ".read": "auth != null" },
    "managementRequests": { ".read": "auth != null" },
    "inventoryItems": { ".read": "auth != null" },
    "utMachines": { ".read": "auth != null" },
    "dftMachines": { ".read": "auth != null" },
    "mobileSims": { ".read": "auth != null" },
    "laptopsDesktops": { ".read": "auth != null" },
    "machineLogs": { ".read": "auth != null" },
    "certificateRequests": { ".read": "auth != null" },
    "announcements": { ".read": "auth != null" },
    "buildings": { ".read": "auth != null" },

    // Define specific write rules for each section.
    "users": {
      "$uid": {
        // A user can write to their own profile, or an Admin/PC can write to any profile.
        ".write": "$uid === auth.uid || root.child('users').child(auth.uid).child('role').val() === 'Admin' || root.child('users').child(auth.uid).child('role').val() === 'Project Coordinator'"
      }
    },
    "roles": {
      // Only Admins/PCs can modify roles.
      ".write": "root.child('users').child(auth.uid).child('role').val() === 'Admin' || root.child('users').child(auth.uid).child('role').val() === 'Project Coordinator'"
    },
    "projects": {
      // Only Admins/PCs can modify projects.
      ".write": "root.child('users').child(auth.uid).child('role').val() === 'Admin' || root.child('users').child(auth.uid).child('role').val() === 'Project Coordinator'"
    },
    "branding": {
       // Only Admins/PCs can modify branding.
       ".write": "root.child('users').child(auth.uid).child('role').val() === 'Admin' || root.child('users').child(auth.uid).child('role').val() === 'Project Coordinator'"
    },
    "tasks": {
      // Write access is handled by the application logic, so a general authenticated write is sufficient here,
      // as long as the backend logic is trusted.
      ".write": "auth != null"
    },
    // For other data types, allow any authenticated user to write.
    // The application's UI already restricts actions based on user roles.
    "activityLogs": { ".write": "auth != null" },
    "plannerEvents": { ".write": "auth != null" },
    "dailyPlannerComments": { ".write": "auth != null" },
    "achievements": { ".write": "auth != null" },
    "vehicles": { ".write": "auth != null" },
    "drivers": { ".write": "auth != null" },
    "incidentReports": { ".write": "auth != null" },
    "manpowerLogs": { ".write": "auth != null" },
    "manpowerProfiles": { ".write": "auth != null" },
    "internalRequests": { ".write": "auth != null" },
    "managementRequests": { ".write": "auth != null" },
    "inventoryItems": { ".write": "auth != null" },
    "utMachines": { ".write": "auth != null" },
    "dftMachines": { ".write": "auth != null" },
    "mobileSims": { ".write": "auth != null" },
    "laptopsDesktops": { ".write": "auth != null" },
    "machineLogs": { ".write": "auth != null" },
    "certificateRequests": { ".write": "auth != null" },
    "announcements": { ".write": "auth != null" },
    "buildings": { ".write": "auth != null" }
  }
}
